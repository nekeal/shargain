// This file is auto-generated by @hey-api/openapi-ts

/**
 * ScrapingUrlResponse
 */
export type ScrapingUrlResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Url
     */
    url: string;
    /**
     * Name
     */
    name: string;
    /**
     * Isactive
     */
    isActive: boolean;
    /**
     * Lastcheckedat
     */
    lastCheckedAt?: string | null;
};

/**
 * TargetResponse
 */
export type TargetResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Enablenotifications
     */
    enableNotifications: boolean;
    /**
     * Notificationconfigid
     */
    notificationConfigId: number | null;
    /**
     * Isactive
     */
    isActive: boolean;
    /**
     * Urls
     */
    urls: Array<ScrapingUrlResponse>;
};

/**
 * ErrorSchema
 */
export type ErrorSchema = {
    /**
     * Detail
     */
    detail: string;
};

/**
 * TargetWithConfigResponse
 */
export type TargetWithConfigResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Isactive
     */
    isActive: boolean;
    /**
     * Enablenotifications
     */
    enableNotifications: boolean;
    /**
     * Notificationconfigid
     */
    notificationConfigId: number | null;
};

/**
 * NotificationConfigRequest
 */
export type NotificationConfigRequest = {
    /**
     * Notificationconfigid
     */
    notificationConfigId?: number | null;
};

/**
 * AddUrlRequest
 */
export type AddUrlRequest = {
    /**
     * Url
     */
    url: string;
    /**
     * Name
     */
    name?: string | null;
};

/**
 * ToggleNotificationsResponse
 */
export type ToggleNotificationsResponse = {
    /**
     * Enablenotifications
     */
    enableNotifications: boolean;
};

/**
 * ToggleNotificationsRequest
 */
export type ToggleNotificationsRequest = {
    /**
     * Enable
     */
    enable?: boolean | null;
};

/**
 * UpdateTargetNameRequest
 */
export type UpdateTargetNameRequest = {
    /**
     * Name
     */
    name: string;
};

/**
 * GenerateTokenResponse
 */
export type GenerateTokenResponse = {
    /**
     * Telegramboturl
     */
    telegramBotUrl: string;
};

/**
 * NotificationConfigResponse
 */
export type NotificationConfigResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string | null;
    /**
     * Channel
     */
    channel: string;
    /**
     * Chatid
     */
    chatId: string;
};

/**
 * CreateNotificationConfigRequest
 */
export type CreateNotificationConfigRequest = {
    /**
     * Name
     */
    name?: string | null;
    /**
     * Chatid
     */
    chatId: string;
    channel?: NotificationChannelChoices;
};

/**
 * NotificationChannelChoices
 */
export type NotificationChannelChoices = 'discord' | 'telegram';

/**
 * NotificationConfigListResponse
 */
export type NotificationConfigListResponse = {
    /**
     * Configs
     */
    configs: Array<NotificationConfigResponse>;
};

/**
 * UpdateNotificationConfigRequest
 */
export type UpdateNotificationConfigRequest = {
    /**
     * Name
     */
    name: string | null;
};

/**
 * CsrfTokenResponse
 */
export type CsrfTokenResponse = {
    /**
     * Csrftoken
     */
    csrfToken: string;
};

/**
 * LoginResponse
 */
export type LoginResponse = {
    /**
     * Success
     */
    success: boolean;
    /**
     * Message
     */
    message: string;
    user?: UserSchema | null;
};

/**
 * UserSchema
 */
export type UserSchema = {
    /**
     * Id
     */
    id: number;
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string;
};

/**
 * LoginRequest
 */
export type LoginRequest = {
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
};

/**
 * SignupRequest
 */
export type SignupRequest = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

export type GetMyTargetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/public/targets/my-target';
};

export type GetMyTargetErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type GetMyTargetError = GetMyTargetErrors[keyof GetMyTargetErrors];

export type GetMyTargetResponses = {
    /**
     * OK
     */
    200: TargetResponse;
};

export type GetMyTargetResponse = GetMyTargetResponses[keyof GetMyTargetResponses];

export type GetSingleTargetData = {
    body?: never;
    path: {
        /**
         * Target Id
         */
        target_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}';
};

export type GetSingleTargetErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type GetSingleTargetError = GetSingleTargetErrors[keyof GetSingleTargetErrors];

export type GetSingleTargetResponses = {
    /**
     * OK
     */
    200: TargetResponse;
};

export type GetSingleTargetResponse = GetSingleTargetResponses[keyof GetSingleTargetResponses];

export type UpdateTargetNotificationConfigData = {
    body: NotificationConfigRequest;
    path: {
        /**
         * Target Id
         */
        target_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/notification-config';
};

export type UpdateTargetNotificationConfigErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type UpdateTargetNotificationConfigError = UpdateTargetNotificationConfigErrors[keyof UpdateTargetNotificationConfigErrors];

export type UpdateTargetNotificationConfigResponses = {
    /**
     * OK
     */
    200: TargetWithConfigResponse;
};

export type UpdateTargetNotificationConfigResponse = UpdateTargetNotificationConfigResponses[keyof UpdateTargetNotificationConfigResponses];

export type AddUrlToTargetData = {
    body: AddUrlRequest;
    path: {
        /**
         * Target Id
         */
        target_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/add-url';
};

export type AddUrlToTargetErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type AddUrlToTargetError = AddUrlToTargetErrors[keyof AddUrlToTargetErrors];

export type AddUrlToTargetResponses = {
    /**
     * OK
     */
    200: ScrapingUrlResponse;
};

export type AddUrlToTargetResponse = AddUrlToTargetResponses[keyof AddUrlToTargetResponses];

export type DeleteTargetUrlData = {
    body?: never;
    path: {
        /**
         * Target Id
         */
        target_id: number;
        /**
         * Url Id
         */
        url_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/urls/{url_id}';
};

export type DeleteTargetUrlErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type DeleteTargetUrlError = DeleteTargetUrlErrors[keyof DeleteTargetUrlErrors];

export type DeleteTargetUrlResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteTargetUrlResponse = DeleteTargetUrlResponses[keyof DeleteTargetUrlResponses];

export type ActivateScrapingUrlData = {
    body?: never;
    path: {
        /**
         * Target Id
         */
        target_id: number;
        /**
         * Url Id
         */
        url_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/urls/{url_id}/activate';
};

export type ActivateScrapingUrlErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type ActivateScrapingUrlError = ActivateScrapingUrlErrors[keyof ActivateScrapingUrlErrors];

export type ActivateScrapingUrlResponses = {
    /**
     * OK
     */
    200: ScrapingUrlResponse;
};

export type ActivateScrapingUrlResponse = ActivateScrapingUrlResponses[keyof ActivateScrapingUrlResponses];

export type DeactivateScrapingUrlData = {
    body?: never;
    path: {
        /**
         * Target Id
         */
        target_id: number;
        /**
         * Url Id
         */
        url_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/urls/{url_id}/deactivate';
};

export type DeactivateScrapingUrlErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type DeactivateScrapingUrlError = DeactivateScrapingUrlErrors[keyof DeactivateScrapingUrlErrors];

export type DeactivateScrapingUrlResponses = {
    /**
     * OK
     */
    200: ScrapingUrlResponse;
};

export type DeactivateScrapingUrlResponse = DeactivateScrapingUrlResponses[keyof DeactivateScrapingUrlResponses];

export type ToggleTargetNotificationsData = {
    body: ToggleNotificationsRequest;
    path: {
        /**
         * Target Id
         */
        target_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/toggle-notifications';
};

export type ToggleTargetNotificationsErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type ToggleTargetNotificationsError = ToggleTargetNotificationsErrors[keyof ToggleTargetNotificationsErrors];

export type ToggleTargetNotificationsResponses = {
    /**
     * OK
     */
    200: ToggleNotificationsResponse;
};

export type ToggleTargetNotificationsResponse = ToggleTargetNotificationsResponses[keyof ToggleTargetNotificationsResponses];

export type SendTargetTestNotificationData = {
    body?: never;
    path: {
        /**
         * Target Id
         */
        target_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/send-test-notification';
};

export type SendTargetTestNotificationErrors = {
    /**
     * Bad Request
     */
    400: ErrorSchema;
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type SendTargetTestNotificationError = SendTargetTestNotificationErrors[keyof SendTargetTestNotificationErrors];

export type SendTargetTestNotificationResponses = {
    /**
     * No Content
     */
    204: void;
};

export type SendTargetTestNotificationResponse = SendTargetTestNotificationResponses[keyof SendTargetTestNotificationResponses];

export type UpdateTargetNameData = {
    body: UpdateTargetNameRequest;
    path: {
        /**
         * Target Id
         */
        target_id: number;
    };
    query?: never;
    url: '/api/public/targets/{target_id}/update-name';
};

export type UpdateTargetNameErrors = {
    /**
     * Bad Request
     */
    400: ErrorSchema;
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type UpdateTargetNameError = UpdateTargetNameErrors[keyof UpdateTargetNameErrors];

export type UpdateTargetNameResponses = {
    /**
     * No Content
     */
    204: void;
};

export type UpdateTargetNameResponse = UpdateTargetNameResponses[keyof UpdateTargetNameResponses];

export type GenerateTelegramTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/public/notifications/telegram/generate-token';
};

export type GenerateTelegramTokenErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type GenerateTelegramTokenError = GenerateTelegramTokenErrors[keyof GenerateTelegramTokenErrors];

export type GenerateTelegramTokenResponses = {
    /**
     * OK
     */
    200: GenerateTokenResponse;
};

export type GenerateTelegramTokenResponse = GenerateTelegramTokenResponses[keyof GenerateTelegramTokenResponses];

export type ListNotificationConfigsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/public/notifications';
};

export type ListNotificationConfigsResponses = {
    /**
     * OK
     */
    200: NotificationConfigListResponse;
};

export type ListNotificationConfigsResponse = ListNotificationConfigsResponses[keyof ListNotificationConfigsResponses];

export type CreateNotificationConfigData = {
    body: CreateNotificationConfigRequest;
    path?: never;
    query?: never;
    url: '/api/public/notifications';
};

export type CreateNotificationConfigErrors = {
    /**
     * Bad Request
     */
    400: ErrorSchema;
};

export type CreateNotificationConfigError = CreateNotificationConfigErrors[keyof CreateNotificationConfigErrors];

export type CreateNotificationConfigResponses = {
    /**
     * OK
     */
    200: NotificationConfigResponse;
};

export type CreateNotificationConfigResponse = CreateNotificationConfigResponses[keyof CreateNotificationConfigResponses];

export type DeleteNotificationConfigData = {
    body?: never;
    path: {
        /**
         * Config Id
         */
        config_id: number;
    };
    query?: never;
    url: '/api/public/notifications/{config_id}';
};

export type DeleteNotificationConfigErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type DeleteNotificationConfigError = DeleteNotificationConfigErrors[keyof DeleteNotificationConfigErrors];

export type DeleteNotificationConfigResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteNotificationConfigResponse = DeleteNotificationConfigResponses[keyof DeleteNotificationConfigResponses];

export type GetNotificationConfigData = {
    body?: never;
    path: {
        /**
         * Config Id
         */
        config_id: number;
    };
    query?: never;
    url: '/api/public/notifications/{config_id}';
};

export type GetNotificationConfigErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type GetNotificationConfigError = GetNotificationConfigErrors[keyof GetNotificationConfigErrors];

export type GetNotificationConfigResponses = {
    /**
     * OK
     */
    200: NotificationConfigResponse;
};

export type GetNotificationConfigResponse = GetNotificationConfigResponses[keyof GetNotificationConfigResponses];

export type UpdateNotificationConfigData = {
    body: UpdateNotificationConfigRequest;
    path: {
        /**
         * Config Id
         */
        config_id: number;
    };
    query?: never;
    url: '/api/public/notifications/{config_id}';
};

export type UpdateNotificationConfigErrors = {
    /**
     * Not Found
     */
    404: ErrorSchema;
};

export type UpdateNotificationConfigError = UpdateNotificationConfigErrors[keyof UpdateNotificationConfigErrors];

export type UpdateNotificationConfigResponses = {
    /**
     * OK
     */
    200: NotificationConfigResponse;
};

export type UpdateNotificationConfigResponse = UpdateNotificationConfigResponses[keyof UpdateNotificationConfigResponses];

export type ShargainPublicApiAuthGetCsrfTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/public/auth/csrf';
};

export type ShargainPublicApiAuthGetCsrfTokenResponses = {
    /**
     * OK
     */
    200: CsrfTokenResponse;
};

export type ShargainPublicApiAuthGetCsrfTokenResponse = ShargainPublicApiAuthGetCsrfTokenResponses[keyof ShargainPublicApiAuthGetCsrfTokenResponses];

export type ShargainPublicApiAuthLoginViewData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/api/public/auth/login';
};

export type ShargainPublicApiAuthLoginViewResponses = {
    /**
     * OK
     */
    200: LoginResponse;
};

export type ShargainPublicApiAuthLoginViewResponse = ShargainPublicApiAuthLoginViewResponses[keyof ShargainPublicApiAuthLoginViewResponses];

export type ShargainPublicApiAuthSignupViewData = {
    body: SignupRequest;
    path?: never;
    query?: never;
    url: '/api/public/auth/signup';
};

export type ShargainPublicApiAuthSignupViewResponses = {
    /**
     * OK
     */
    200: LoginResponse;
};

export type ShargainPublicApiAuthSignupViewResponse = ShargainPublicApiAuthSignupViewResponses[keyof ShargainPublicApiAuthSignupViewResponses];

export type ShargainPublicApiAuthLogoutViewData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/public/auth/logout';
};

export type ShargainPublicApiAuthLogoutViewResponses = {
    /**
     * OK
     */
    200: LoginResponse;
};

export type ShargainPublicApiAuthLogoutViewResponse = ShargainPublicApiAuthLogoutViewResponses[keyof ShargainPublicApiAuthLogoutViewResponses];

export type GetMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/public/me';
};

export type GetMeResponses = {
    /**
     * OK
     */
    200: UserSchema;
};

export type GetMeResponse = GetMeResponses[keyof GetMeResponses];

export type ClientOptions = {
    baseUrl: string;
};
